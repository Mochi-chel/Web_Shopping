Betyg 3
Cart
List product
Method: AddProductToCart, ShowCart

Product
Name
Price (Optional)
Description (Optional)

Consumer
Name

Betyg 4
Product
Name
Amount of product
Price (Optional)
Description (Optional)

Consumer - Kan endast handla
Name

Staff - Kan Vad kan den göra?
Name

Admin - Vad kan den göra?
Name

Betyg 5
Staff - Kan se ordrar och packa dem


Admin - create product, edit product, delete product, addToCategory

Kanske kommer behöva ha logga in som personal eller konsument?
Nej, databasen får ha "Usertype" entitet, så att den kan identifiera direkt
om vilken typ av användare det är.


Database
User
username
password
type

Product
Name
AmountOfProduct

Order (Osäker)
orderId
username
status


Kod från pdf
Databasen för persistens.
package myapp.bo;
import myapp.db.Item;
public class Item {
private int id;
private String name;
private int price;
static public Collection searchItems(String
group)
{
return ItemDB.searchItems(group);
}
protected Item(int id , String name) {
this.id = id;
this.name = name;
}
public String getName() {
return name;
}
}


package myapp.db;
public class ItemDB extends Item {
    public static Collection searchItems(String
    group) {
        Vector v = new Vector();
        Connection con = DBManager.getConnetion();
        Statement st = con.createStatement();
        ResultSet rs = st.executeStatement("select
        item_id, name from Item where
        item_group = "+group);
        while (rs.next()) {
            int i = rs.getInt("item_id");
            String name = rs.getString("name");
            v.addElement(new ItemDB(i, name));
        }
        return v;
    }
    private ItemDB(int id, String name) {
    super(id, name);
    }
}



package myapp.bo;
public class LookItems {
    public Hashtable getItemsWithGroup(String s) {
        Collection c = Item.searchItems(s);
        Hashtable t = new HashTable();
        t.put("size", c.size());
        for (int i = 0, Iterator it = c.iterator();
        it.hasNext(); i++) {
            Hashtable item = new Hashtable();
            Item i = (Item) it.next();
            items.put("name", i.getName());
            items.put("price", i.getPrice());
            t.put("Item"+i, item);
        }
    return t;
    }
}

